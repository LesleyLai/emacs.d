This repository contains my setting of Emacs.

* Usage
Put the whole directory to =~/.emacs.d=

* Customized Keybindings
This configuration customized a lot of key bindings.
See [[file:docs/keybinding.org][keybinding.org]] for more information.

* Additional Setups
  Here are some additional setups that are required on each computer when using this =.emacs.d= configuration.

** Org-mode
*** Roam
   The [[https://github.com/org-roam/org-roam][org-roam]] package requires =sqlite3= be located on =exec-path=. You also need to set up an additional variable ~org-roam-directory~ to your preferred org-roam directory.

   For a visual representation of the notes and their connections, =Graphviz= is required. You also need to setup org-protocol a by following [[https://www.orgroam.com/manual/Installation-_00281_0029.html][this instruction]].

*** Deft
    Deft is the package that I used to quickly browse notes. You need to set up the variable ~deft-directory~ to the same directory of org-roam.

* External packages
Install those optional third-party packages to setup for certain languages.

** C/C++
*Clangd* is used for C and C++ support.

** CMake
#+begin_src shell
pip install cmake-language-server
#+end_src

** Python
Python language server
[[https://github.com/palantir/python-language-server][plys]] needs to be installed:

#+begin_src shell
pip install 'python-language-server[all]'
#+end_src

** Bash
#+begin_src shell
[sudo] npm install -g bash-language-server
#+end_src

** HTML & CSS
Install [[https://github.com/vscode-langservers/vscode-html-languageserver][HTML language Server]] and [[https://github.com/vscode-langservers/vscode-css-languageserver-bin][CSS language server]] by
#+begin_src shell
[sudo] npm install -g vscode-html-languageserver-bin
[sudo] npm install -g vscode-css-languageserver-bin
#+end_src
** Elm
#+begin_src shell
[sudo] npm i -g @elm-tooling/elm-language-server
#+end_src
** Javascript & Typescript
*** Linter and formatters
#+begin_src shell
[sudo] npm i -g eslint
[sudo] npm i -g prettier
#+end_src

*** lsp mode support
#+begin_src shell
[sudo] npm i -g typescript-language-server
[sudo] npm i -g typescript
#+end_src

** Json
#+begin_src shell
[sudo] npm i -g vscode-json-languageserver
#+end_src

** Markdown lint
#+begin_src shell
[sudo] npm install -g markdownlint-cli
#+end_src

** Latex
   Install [[https://github.com/astoff/digestif][digestif]]
** OCaml/Reason
Follow the instruction on https://ocaml.org/docs/install.html#OPAM to setup OPAM and OCamlc. To make the toolchain work properly with [[https://bucklescript.github.io/][bucklescript]], the version of ocamlc must be the one that bucklescript is based on (for example: BS 7.x is based on OCaml 4.06.1.) And install the following packages:

#+begin_src sh
opam install utop # Better repl
opam install ocamlformat # Formatter
opam install merlin # IDE features
opam install ocp-indent
opam install reason # ReasonML
#+end_src

*** On Windows
Install opam on WSL and use [[https://github.com/leongrdic/wsl-alias][wsl-alias]]. Add =eval $(opam env)= to =~/.wsl-alias/env.sh=.

#+begin_src sh
b wsl-alias add opam opam
b wsl-alias add ocamlformat ocamlformat
b wsl-alias add ocaml ocaml
b wsl-alias add ocamlc ocamlc
b wsl-alias add utop utop
b wsl-alias add ocamlmerlin ocamlmerlin
b wsl-alias add dune dune
b wsl-alias add ocp-indent ocp-indent
b wsl-alias add ocamlfind ocamlfind
b wsl-alias add refmt refmt
#+end_src

** Racket
First install Racket, and then install the [[https://github.com/jeapostrophe/racket-langserver][racket-langserver]] by ~raco pkg install racket-langserver~

** Readme Preview
Install [[https://github.com/joeyespo/grip][Grip]] by `pip install grip`. Then we can use `grip-mode` to live preview github flaver markdown and org files.

** Rust
Some tools that needed for ~rust-mode~, ~lsp-rust~, and ~cargo-mode~.

#+begin_src text
rustup component add rls rust-analysis rust-src
cargo install rustfmt
cargo install cargo-check
rustup component add clippy-preview
#+end_src

*** org-babel
    To make ~org-babel~ successfully executing rust, you need to install [[https://github.com/DanielKeep/cargo-script][cargo-script]]:
    #+begin_src text
cargo install cargo-script
    #+end_src

** Yaml
Install [[https://github.com/adrienverge/yamllint][yamllint]]
~pip install yamllint~

Install [[https://github.com/redhat-developer/yaml-language-server][yaml-language-server]]
npm install -g yaml-language-server
